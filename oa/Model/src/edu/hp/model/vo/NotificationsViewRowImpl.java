package edu.hp.model.vo;

import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 12 21:02:25 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NotificationsViewRowImpl extends ViewRowImpl {

    public static final int ENTITY_NOTIFICATIONS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getId();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        Category {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getCategory();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setCategory((String)value);
            }
        }
        ,
        Title {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getTitle();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        Content {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getContent();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setContent((String)value);
            }
        }
        ,
        EventDate {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getEventDate();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setEventDate((Timestamp)value);
            }
        }
        ,
        IsSmsSent {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getIsSmsSent();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setIsSmsSent((String)value);
            }
        }
        ,
        Priority {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getPriority();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setPriority((Number)value);
            }
        }
        ,
        State {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getState();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setState((String)value);
            }
        }
        ,
        ToUserId {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getToUserId();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setToUserId((String)value);
            }
        }
        ,
        ContextObjectType {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getContextObjectType();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setContextObjectType((String)value);
            }
        }
        ,
        ContextObjectId {
            public Object get(NotificationsViewRowImpl obj) {
                return obj.getContextObjectId();
            }

            public void put(NotificationsViewRowImpl obj, Object value) {
                obj.setContextObjectId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(NotificationsViewRowImpl object);

        public abstract void put(NotificationsViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int CONTENT = AttributesEnum.Content.index();
    public static final int EVENTDATE = AttributesEnum.EventDate.index();
    public static final int ISSMSSENT = AttributesEnum.IsSmsSent.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int TOUSERID = AttributesEnum.ToUserId.index();
    public static final int CONTEXTOBJECTTYPE = AttributesEnum.ContextObjectType.index();
    public static final int CONTEXTOBJECTID = AttributesEnum.ContextObjectId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NotificationsViewRowImpl() {
    }

    /**
     * Gets Notifications entity object.
     * @return the Notifications
     */
    public EntityImpl getNotifications() {
        return (EntityImpl)getEntity(ENTITY_NOTIFICATIONS);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for CATEGORY using the alias name Category.
     * @return the CATEGORY
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY using the alias name Category.
     * @param value value to set the CATEGORY
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for TITLE using the alias name Title.
     * @return the TITLE
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE using the alias name Title.
     * @param value value to set the TITLE
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for CONTENT using the alias name Content.
     * @return the CONTENT
     */
    public String getContent() {
        return (String) getAttributeInternal(CONTENT);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT using the alias name Content.
     * @param value value to set the CONTENT
     */
    public void setContent(String value) {
        setAttributeInternal(CONTENT, value);
    }

    /**
     * Gets the attribute value for EVENT_DATE using the alias name EventDate.
     * @return the EVENT_DATE
     */
    public Timestamp getEventDate() {
        return (Timestamp) getAttributeInternal(EVENTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EVENT_DATE using the alias name EventDate.
     * @param value value to set the EVENT_DATE
     */
    public void setEventDate(Timestamp value) {
        setAttributeInternal(EVENTDATE, value);
    }

    /**
     * Gets the attribute value for IS_SMS_SENT using the alias name IsSmsSent.
     * @return the IS_SMS_SENT
     */
    public String getIsSmsSent() {
        return (String) getAttributeInternal(ISSMSSENT);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_SMS_SENT using the alias name IsSmsSent.
     * @param value value to set the IS_SMS_SENT
     */
    public void setIsSmsSent(String value) {
        setAttributeInternal(ISSMSSENT, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public Number getPriority() {
        return (Number) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(Number value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for STATE using the alias name State.
     * @return the STATE
     */
    public String getState() {
        return (String) getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE using the alias name State.
     * @param value value to set the STATE
     */
    public void setState(String value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for TO_USER_ID using the alias name ToUserId.
     * @return the TO_USER_ID
     */
    public String getToUserId() {
        return (String) getAttributeInternal(TOUSERID);
    }

    /**
     * Sets <code>value</code> as attribute value for TO_USER_ID using the alias name ToUserId.
     * @param value value to set the TO_USER_ID
     */
    public void setToUserId(String value) {
        setAttributeInternal(TOUSERID, value);
    }

    /**
     * Gets the attribute value for CONTEXT_OBJECT_TYPE using the alias name ContextObjectType.
     * @return the CONTEXT_OBJECT_TYPE
     */
    public String getContextObjectType() {
        return (String) getAttributeInternal(CONTEXTOBJECTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTEXT_OBJECT_TYPE using the alias name ContextObjectType.
     * @param value value to set the CONTEXT_OBJECT_TYPE
     */
    public void setContextObjectType(String value) {
        setAttributeInternal(CONTEXTOBJECTTYPE, value);
    }

    /**
     * Gets the attribute value for CONTEXT_OBJECT_ID using the alias name ContextObjectId.
     * @return the CONTEXT_OBJECT_ID
     */
    public String getContextObjectId() {
        return (String) getAttributeInternal(CONTEXTOBJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTEXT_OBJECT_ID using the alias name ContextObjectId.
     * @param value value to set the CONTEXT_OBJECT_ID
     */
    public void setContextObjectId(String value) {
        setAttributeInternal(CONTEXTOBJECTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
