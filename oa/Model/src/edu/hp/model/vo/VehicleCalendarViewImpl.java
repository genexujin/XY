package edu.hp.model.vo;

import edu.hp.model.common.BaseView;
import edu.hp.model.common.Constants;
import edu.hp.model.vo.common.VehicleCalendarView;

import oracle.jbo.Row;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 31 13:09:19 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VehicleCalendarViewImpl extends BaseView implements VehicleCalendarView {
    /**
     * This is the default constructor (do not remove).
     */
    public VehicleCalendarViewImpl() {
    }
    
 
    
    public void newRow(String userDisplayName, String userId) {
        //this.executeEmptyRowSet();
        Row newRow = this.createRow();
        newRow.setAttribute("UserDisplayName", userDisplayName);
        newRow.setAttribute("UserId", userId);
        this.insertRow(newRow);
        this.setCurrentRow(newRow);
    }

    public void updateActivityTime(String vehicleActId, Timestamp startTime, Timestamp endTime) {
        this.queryByPK(vehicleActId);
        Row[] rows = this.getAllRowsInRange();
        if (rows != null && rows.length > 0) {
            rows[0].setAttribute("StartTime", startTime);
            rows[0].setAttribute("EndTime", endTime);
            this.getDBTransaction().commit();
        }
    }

    public void updateEndTime(String vehicleActId, Timestamp endTime) {
        this.queryByPK(vehicleActId);
       
        Row[] rows = this.getAllRowsInRange();
        if (rows != null && rows.length > 0) {
            //System.err.println("Row id: " + rows[0].getAttribute("Id"));
            //System.err.println(rows[0].getAttribute("StartTime"));
            //rows[0].removeFromCollection();
            rows[0].setAttribute("EndTime", endTime);
            this.getDBTransaction().commit();
        }
    }


    public void deleteByPK(String vehicleActId) {
        this.queryByPK(vehicleActId);
        Row[] rows = this.getAllRowsInRange();
        if (rows != null && rows.length > 0) {
            //rows[0].removeFromCollection();
            rows[0].remove();
//            rows[0].setAttribute("State", Constants.STATE_CANCELED);
            this.getDBTransaction().commit();
        }
    }
    
    public void queryByPK(String confRmCalId) {
        super.queryByVC("findById", "vehicleActId", confRmCalId);
    }

    public void findByUserid(String userId) {
        super.queryByVC("findByUserId", "userId", userId);
    }

    public void findByState(String state) {
        super.queryByVC("findByState", "state", state);
    }
                                                           
    public void findByDriver(String driverId) {
        super.queryByVC("findByDriver", "driverId", driverId);
    }


    /**
     * Returns the variable value for vehicleActId.
     * @return variable value for vehicleActId
     */
    public String getvehicleActId() {
        return (String)ensureVariableManager().getVariableValue("vehicleActId");
    }

    /**
     * Sets <code>value</code> for variable vehicleActId.
     * @param value value to bind as vehicleActId
     */
    public void setvehicleActId(String value) {
        ensureVariableManager().setVariableValue("vehicleActId", value);
    }

    /**
     * Returns the variable value for userId.
     * @return variable value for userId
     */
    public String getuserId() {
        return (String)ensureVariableManager().getVariableValue("userId");
    }

    /**
     * Sets <code>value</code> for variable userId.
     * @param value value to bind as userId
     */
    public void setuserId(String value) {
        ensureVariableManager().setVariableValue("userId", value);
    }

    /**
     * Returns the variable value for state.
     * @return variable value for state
     */
    public String getstate() {
        return (String)ensureVariableManager().getVariableValue("state");
    }

    /**
     * Sets <code>value</code> for variable state.
     * @param value value to bind as state
     */
    public void setstate(String value) {
        ensureVariableManager().setVariableValue("state", value);
    }

    /**
     * Returns the variable value for driverId.
     * @return variable value for driverId
     */
    public String getdriverId() {
        return (String)ensureVariableManager().getVariableValue("driverId");
    }

    /**
     * Sets <code>value</code> for variable driverId.
     * @param value value to bind as driverId
     */
    public void setdriverId(String value) {
        ensureVariableManager().setVariableValue("driverId", value);
    }
}
