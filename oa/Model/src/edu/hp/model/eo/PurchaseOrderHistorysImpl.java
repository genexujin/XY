package edu.hp.model.eo;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 06 10:43:04 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PurchaseOrderHistorysImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrderHistoryId {
            public Object get(PurchaseOrderHistorysImpl obj) {
                return obj.getOrderHistoryId();
            }

            public void put(PurchaseOrderHistorysImpl obj, Object value) {
                obj.setOrderHistoryId((DBSequence)value);
            }
        }
        ,
        OrderId {
            public Object get(PurchaseOrderHistorysImpl obj) {
                return obj.getOrderId();
            }

            public void put(PurchaseOrderHistorysImpl obj, Object value) {
                obj.setOrderId((String)value);
            }
        }
        ,
        OperatorId {
            public Object get(PurchaseOrderHistorysImpl obj) {
                return obj.getOperatorId();
            }

            public void put(PurchaseOrderHistorysImpl obj, Object value) {
                obj.setOperatorId((String)value);
            }
        }
        ,
        OperationDetail {
            public Object get(PurchaseOrderHistorysImpl obj) {
                return obj.getOperationDetail();
            }

            public void put(PurchaseOrderHistorysImpl obj, Object value) {
                obj.setOperationDetail((String)value);
            }
        }
        ,
        OperationDate {
            public Object get(PurchaseOrderHistorysImpl obj) {
                return obj.getOperationDate();
            }

            public void put(PurchaseOrderHistorysImpl obj, Object value) {
                obj.setOperationDate((Timestamp)value);
            }
        }
        ,
        PurchaseOrder {
            public Object get(PurchaseOrderHistorysImpl obj) {
                return obj.getPurchaseOrder();
            }

            public void put(PurchaseOrderHistorysImpl obj, Object value) {
                obj.setPurchaseOrder((PurchaseOrdersImpl)value);
            }
        }
        ,
        OperatorEmp {
            public Object get(PurchaseOrderHistorysImpl obj) {
                return obj.getOperatorEmp();
            }

            public void put(PurchaseOrderHistorysImpl obj, Object value) {
                obj.setOperatorEmp((EmployeesImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PurchaseOrderHistorysImpl object);

        public abstract void put(PurchaseOrderHistorysImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORDERHISTORYID = AttributesEnum.OrderHistoryId.index();
    public static final int ORDERID = AttributesEnum.OrderId.index();
    public static final int OPERATORID = AttributesEnum.OperatorId.index();
    public static final int OPERATIONDETAIL = AttributesEnum.OperationDetail.index();
    public static final int OPERATIONDATE = AttributesEnum.OperationDate.index();
    public static final int PURCHASEORDER = AttributesEnum.PurchaseOrder.index();
    public static final int OPERATOREMP = AttributesEnum.OperatorEmp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PurchaseOrderHistorysImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("edu.hp.model.eo.PurchaseOrderHistorys");
    }

    /**
     * Gets the attribute value for OrderHistoryId, using the alias name OrderHistoryId.
     * @return the value of OrderHistoryId
     */
    public DBSequence getOrderHistoryId() {
        return (DBSequence)getAttributeInternal(ORDERHISTORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderHistoryId.
     * @param value value to set the OrderHistoryId
     */
    public void setOrderHistoryId(DBSequence value) {
        setAttributeInternal(ORDERHISTORYID, value);
    }


    /**
     * Gets the attribute value for OrderId, using the alias name OrderId.
     * @return the value of OrderId
     */
    public String getOrderId() {
        return (String)getAttributeInternal(ORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrderId.
     * @param value value to set the OrderId
     */
    public void setOrderId(String value) {
        setAttributeInternal(ORDERID, value);
    }

    /**
     * Gets the attribute value for OperatorId, using the alias name OperatorId.
     * @return the value of OperatorId
     */
    public String getOperatorId() {
        return (String)getAttributeInternal(OPERATORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorId.
     * @param value value to set the OperatorId
     */
    public void setOperatorId(String value) {
        setAttributeInternal(OPERATORID, value);
    }

    /**
     * Gets the attribute value for OperationDetail, using the alias name OperationDetail.
     * @return the value of OperationDetail
     */
    public String getOperationDetail() {
        return (String)getAttributeInternal(OPERATIONDETAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperationDetail.
     * @param value value to set the OperationDetail
     */
    public void setOperationDetail(String value) {
        setAttributeInternal(OPERATIONDETAIL, value);
    }

    /**
     * Gets the attribute value for OperationDate, using the alias name OperationDate.
     * @return the value of OperationDate
     */
    public Timestamp getOperationDate() {
        return (Timestamp)getAttributeInternal(OPERATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperationDate.
     * @param value value to set the OperationDate
     */
    public void setOperationDate(Timestamp value) {
        setAttributeInternal(OPERATIONDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity PurchaseOrdersImpl.
     */
    public PurchaseOrdersImpl getPurchaseOrder() {
        return (PurchaseOrdersImpl)getAttributeInternal(PURCHASEORDER);
    }

    /**
     * Sets <code>value</code> as the associated entity PurchaseOrdersImpl.
     */
    public void setPurchaseOrder(PurchaseOrdersImpl value) {
        setAttributeInternal(PURCHASEORDER, value);
    }

    /**
     * @return the associated entity EmployeesImpl.
     */
    public EmployeesImpl getOperatorEmp() {
        return (EmployeesImpl)getAttributeInternal(OPERATOREMP);
    }

    /**
     * Sets <code>value</code> as the associated entity EmployeesImpl.
     */
    public void setOperatorEmp(EmployeesImpl value) {
        setAttributeInternal(OPERATOREMP, value);
    }


    /**
     * @param orderHistoryId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence orderHistoryId) {
        return new Key(new Object[]{orderHistoryId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
