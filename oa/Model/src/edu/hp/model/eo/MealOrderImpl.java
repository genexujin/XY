package edu.hp.model.eo;

import java.math.BigDecimal;

import java.util.Calendar;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 23 18:42:39 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MealOrderImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(MealOrderImpl obj) {
                return obj.getId();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        RequesterName {
            public Object get(MealOrderImpl obj) {
                return obj.getRequesterName();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setRequesterName((String)value);
            }
        }
        ,
        RequesterId {
            public Object get(MealOrderImpl obj) {
                return obj.getRequesterId();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setRequesterId((String)value);
            }
        }
        ,
        MealDate {
            public Object get(MealOrderImpl obj) {
                return obj.getMealDate();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setMealDate((Date)value);
            }
        }
        ,
        Location {
            public Object get(MealOrderImpl obj) {
                return obj.getLocation();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setLocation((String)value);
            }
        }
        ,
        NumOfBreakfirst {
            public Object get(MealOrderImpl obj) {
                return obj.getNumOfBreakfirst();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setNumOfBreakfirst((BigDecimal)value);
            }
        }
        ,
        NumberOfLunch {
            public Object get(MealOrderImpl obj) {
                return obj.getNumberOfLunch();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setNumberOfLunch((BigDecimal)value);
            }
        }
        ,
        Justification {
            public Object get(MealOrderImpl obj) {
                return obj.getJustification();
            }

            public void put(MealOrderImpl obj, Object value) {
                obj.setJustification((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MealOrderImpl object);

        public abstract void put(MealOrderImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int REQUESTERNAME = AttributesEnum.RequesterName.index();
    public static final int REQUESTERID = AttributesEnum.RequesterId.index();
    public static final int MEALDATE = AttributesEnum.MealDate.index();
    public static final int LOCATION = AttributesEnum.Location.index();
    public static final int NUMOFBREAKFIRST = AttributesEnum.NumOfBreakfirst.index();
    public static final int NUMBEROFLUNCH = AttributesEnum.NumberOfLunch.index();
    public static final int JUSTIFICATION = AttributesEnum.Justification.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MealOrderImpl() {
    }
    
    /**
     * Validation method for MealOrder.
     */
    public boolean validateSubmitDate() {

        Date mealDate = this.getMealDate();
        
        Calendar now = Calendar.getInstance();
        
        System.err.println(new java.util.Date(now.getTimeInMillis()));
        
        Calendar mealCal = Calendar.getInstance();
        mealCal.setTime(mealDate.getValue());
        mealCal.add(Calendar.DAY_OF_MONTH, -2);
        mealCal.set(Calendar.MINUTE, 0);
        mealCal.set(Calendar.HOUR_OF_DAY, 12);
        mealCal.set(Calendar.SECOND, 0);
        System.err.println(new java.util.Date(mealCal.getTimeInMillis()));
        
        if(mealCal.before(now))
            return false;        

        return true;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for RequesterName, using the alias name RequesterName.
     * @return the value of RequesterName
     */
    public String getRequesterName() {
        return (String)getAttributeInternal(REQUESTERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequesterName.
     * @param value value to set the RequesterName
     */
    public void setRequesterName(String value) {
        setAttributeInternal(REQUESTERNAME, value);
    }

    /**
     * Gets the attribute value for RequesterId, using the alias name RequesterId.
     * @return the value of RequesterId
     */
    public String getRequesterId() {
        return (String)getAttributeInternal(REQUESTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequesterId.
     * @param value value to set the RequesterId
     */
    public void setRequesterId(String value) {
        setAttributeInternal(REQUESTERID, value);
    }

    /**
     * Gets the attribute value for MealDate, using the alias name MealDate.
     * @return the value of MealDate
     */
    public Date getMealDate() {
        return (Date)getAttributeInternal(MEALDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MealDate.
     * @param value value to set the MealDate
     */
    public void setMealDate(Date value) {
        setAttributeInternal(MEALDATE, value);
    }

    /**
     * Gets the attribute value for Location, using the alias name Location.
     * @return the value of Location
     */
    public String getLocation() {
        return (String)getAttributeInternal(LOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Location.
     * @param value value to set the Location
     */
    public void setLocation(String value) {
        setAttributeInternal(LOCATION, value);
    }

    /**
     * Gets the attribute value for NumOfBreakfirst, using the alias name NumOfBreakfirst.
     * @return the value of NumOfBreakfirst
     */
    public BigDecimal getNumOfBreakfirst() {
        return (BigDecimal)getAttributeInternal(NUMOFBREAKFIRST);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumOfBreakfirst.
     * @param value value to set the NumOfBreakfirst
     */
    public void setNumOfBreakfirst(BigDecimal value) {
        setAttributeInternal(NUMOFBREAKFIRST, value);
    }

    /**
     * Gets the attribute value for NumberOfLunch, using the alias name NumberOfLunch.
     * @return the value of NumberOfLunch
     */
    public BigDecimal getNumberOfLunch() {
        return (BigDecimal)getAttributeInternal(NUMBEROFLUNCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfLunch.
     * @param value value to set the NumberOfLunch
     */
    public void setNumberOfLunch(BigDecimal value) {
        setAttributeInternal(NUMBEROFLUNCH, value);
    }

    /**
     * Gets the attribute value for Justification, using the alias name Justification.
     * @return the value of Justification
     */
    public String getJustification() {
        return (String)getAttributeInternal(JUSTIFICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Justification.
     * @param value value to set the Justification
     */
    public void setJustification(String value) {
        setAttributeInternal(JUSTIFICATION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[]{id});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("edu.hp.model.eo.MealOrder");
    }

    


}
