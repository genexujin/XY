package edu.hp.model.eo;

import edu.hp.model.common.Constants;
import edu.hp.view.security.LoginUser;
import edu.hp.view.utils.JSFUtils;

import java.math.BigDecimal;

import java.util.Calendar;

import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jan 27 23:20:48 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConfRoomCalendarImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getId();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        UserId {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getUserId();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setUserId((String)value);
            }
        }
        ,
        UserDisplayName {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getUserDisplayName();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setUserDisplayName((String)value);
            }
        }
        ,
        LocationId {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getLocationId();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setLocationId((String)value);
            }
        }
        ,
        LocationName {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getLocationName();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setLocationName((String)value);
            }
        }
        ,
        MeetingRoom {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getMeetingRoom();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setMeetingRoom((String)value);
            }
        }
        ,
        MeetingRoomId {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getMeetingRoomId();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setMeetingRoomId((String)value);
            }
        }
        ,
        Title {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getTitle();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        Participants {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getParticipants();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setParticipants((String)value);
            }
        }
        ,
        StartTime {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getStartTime();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setStartTime((Timestamp)value);
            }
        }
        ,
        EndTime {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getEndTime();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setEndTime((Timestamp)value);
            }
        }
        ,
        Comments {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getComments();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        NeedProjector {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getNeedProjector();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setNeedProjector((String)value);
            }
        }
        ,
        NeedLoudspeaker {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getNeedLoudspeaker();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setNeedLoudspeaker((String)value);
            }
        }
        ,
        NeedBeverage {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getNeedBeverage();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setNeedBeverage((String)value);
            }
        }
        ,
        NeedFruits {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getNeedFruits();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setNeedFruits((String)value);
            }
        }
        ,
        NeedSnacks {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getNeedSnacks();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setNeedSnacks((String)value);
            }
        }
        ,
        SnackLevel {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getSnackLevel();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setSnackLevel((String)value);
            }
        }
        ,
        NumOfPeople {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getNumOfPeople();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setNumOfPeople((BigDecimal)value);
            }
        }
        ,
        State {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getState();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setState((String)value);
            }
        }
        ,
        PrId {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getPrId();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setPrId((String)value);
            }
        }
        ,
        Allday {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getAllday();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setAllday((String)value);
            }
        }
        ,
        SubmitDate {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getSubmitDate();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setSubmitDate((Timestamp)value);
            }
        }
        ,
        ConfLevel {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getConfLevel();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setConfLevel((String)value);
            }
        }
        ,
        BatchId {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getBatchId();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setBatchId((String)value);
            }
        }
        ,
        BatchNo {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getBatchNo();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setBatchNo((String)value);
            }
        }
        ,
        ConfRoomBatchReservation {
            public Object get(ConfRoomCalendarImpl obj) {
                return obj.getConfRoomBatchReservation();
            }

            public void put(ConfRoomCalendarImpl obj, Object value) {
                obj.setConfRoomBatchReservation((ConfRoomBatchReservationImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ConfRoomCalendarImpl object);

        public abstract void put(ConfRoomCalendarImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int USERDISPLAYNAME = AttributesEnum.UserDisplayName.index();
    public static final int LOCATIONID = AttributesEnum.LocationId.index();
    public static final int LOCATIONNAME = AttributesEnum.LocationName.index();
    public static final int MEETINGROOM = AttributesEnum.MeetingRoom.index();
    public static final int MEETINGROOMID = AttributesEnum.MeetingRoomId.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int PARTICIPANTS = AttributesEnum.Participants.index();
    public static final int STARTTIME = AttributesEnum.StartTime.index();
    public static final int ENDTIME = AttributesEnum.EndTime.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int NEEDPROJECTOR = AttributesEnum.NeedProjector.index();
    public static final int NEEDLOUDSPEAKER = AttributesEnum.NeedLoudspeaker.index();
    public static final int NEEDBEVERAGE = AttributesEnum.NeedBeverage.index();
    public static final int NEEDFRUITS = AttributesEnum.NeedFruits.index();
    public static final int NEEDSNACKS = AttributesEnum.NeedSnacks.index();
    public static final int SNACKLEVEL = AttributesEnum.SnackLevel.index();
    public static final int NUMOFPEOPLE = AttributesEnum.NumOfPeople.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int PRID = AttributesEnum.PrId.index();
    public static final int ALLDAY = AttributesEnum.Allday.index();
    public static final int SUBMITDATE = AttributesEnum.SubmitDate.index();
    public static final int CONFLEVEL = AttributesEnum.ConfLevel.index();
    public static final int BATCHID = AttributesEnum.BatchId.index();
    public static final int BATCHNO = AttributesEnum.BatchNo.index();
    public static final int CONFROOMBATCHRESERVATION = AttributesEnum.ConfRoomBatchReservation.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ConfRoomCalendarImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("edu.hp.model.eo.ConfRoomCalendar");
    }

    public void lock() {
        try { 
            super.lock(); 
        } catch (RowInconsistentException e) { 
            e.printStackTrace(); 
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            System.out.println("已被处理的异常信息："+new java.util.Date().toLocaleString()+" 更新时出现锁异常！");
            super.lock(); 
        } 
    }

    public void remove() {
        setAttribute("State", Constants.STATE_CANCELED);
        super.remove();
        //System.err.println("set status");
    }


    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_DELETE) {
            operation = DML_UPDATE;
        }
        
        if (operation == DML_INSERT || operation == DML_UPDATE) {
            if (this.getAllday().equals("ALLDAY")) {
                Timestamp actEndTime = this.getEndTime();
                if (actEndTime != null) {
                    Calendar calendar = Calendar.getInstance();
                    calendar.setTimeInMillis(actEndTime.getTime());
                    calendar.set(Calendar.HOUR_OF_DAY, 23);
                    calendar.set(Calendar.MINUTE, 59);
                    calendar.set(Calendar.SECOND, 59);
                    this.setEndTime(new Timestamp(calendar.getTimeInMillis()));
                }
            }
        }

        super.doDML(operation, e);
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public String getUserId() {
        return (String)getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for UserDisplayName, using the alias name UserDisplayName.
     * @return the value of UserDisplayName
     */
    public String getUserDisplayName() {
        return (String)getAttributeInternal(USERDISPLAYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserDisplayName.
     * @param value value to set the UserDisplayName
     */
    public void setUserDisplayName(String value) {
        setAttributeInternal(USERDISPLAYNAME, value);
    }

    /**
     * Gets the attribute value for LocationId, using the alias name LocationId.
     * @return the value of LocationId
     */
    public String getLocationId() {
        return (String)getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationId.
     * @param value value to set the LocationId
     */
    public void setLocationId(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for LocationName, using the alias name LocationName.
     * @return the value of LocationName
     */
    public String getLocationName() {
        return (String)getAttributeInternal(LOCATIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationName.
     * @param value value to set the LocationName
     */
    public void setLocationName(String value) {
        setAttributeInternal(LOCATIONNAME, value);
    }

    /**
     * Gets the attribute value for MeetingRoom, using the alias name MeetingRoom.
     * @return the value of MeetingRoom
     */
    public String getMeetingRoom() {
        return (String)getAttributeInternal(MEETINGROOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for MeetingRoom.
     * @param value value to set the MeetingRoom
     */
    public void setMeetingRoom(String value) {
        setAttributeInternal(MEETINGROOM, value);
    }

    /**
     * Gets the attribute value for MeetingRoomId, using the alias name MeetingRoomId.
     * @return the value of MeetingRoomId
     */
    public String getMeetingRoomId() {
        return (String)getAttributeInternal(MEETINGROOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MeetingRoomId.
     * @param value value to set the MeetingRoomId
     */
    public void setMeetingRoomId(String value) {
        setAttributeInternal(MEETINGROOMID, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the value of Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Participants, using the alias name Participants.
     * @return the value of Participants
     */
    public String getParticipants() {
        return (String)getAttributeInternal(PARTICIPANTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Participants.
     * @param value value to set the Participants
     */
    public void setParticipants(String value) {
        setAttributeInternal(PARTICIPANTS, value);
    }

    /**
     * Gets the attribute value for StartTime, using the alias name StartTime.
     * @return the value of StartTime
     */
    public Timestamp getStartTime() {
        return (Timestamp)getAttributeInternal(STARTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartTime.
     * @param value value to set the StartTime
     */
    public void setStartTime(Timestamp value) {
        setAttributeInternal(STARTTIME, value);
    }

    /**
     * Gets the attribute value for EndTime, using the alias name EndTime.
     * @return the value of EndTime
     */
    public Timestamp getEndTime() {
        return (Timestamp)getAttributeInternal(ENDTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndTime.
     * @param value value to set the EndTime
     */
    public void setEndTime(Timestamp value) {
        setAttributeInternal(ENDTIME, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the value of Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for NeedProjector, using the alias name NeedProjector.
     * @return the value of NeedProjector
     */
    public String getNeedProjector() {
        return (String)getAttributeInternal(NEEDPROJECTOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for NeedProjector.
     * @param value value to set the NeedProjector
     */
    public void setNeedProjector(String value) {
        setAttributeInternal(NEEDPROJECTOR, value);
    }

    /**
     * Gets the attribute value for NeedLoudspeaker, using the alias name NeedLoudspeaker.
     * @return the value of NeedLoudspeaker
     */
    public String getNeedLoudspeaker() {
        return (String)getAttributeInternal(NEEDLOUDSPEAKER);
    }

    /**
     * Sets <code>value</code> as the attribute value for NeedLoudspeaker.
     * @param value value to set the NeedLoudspeaker
     */
    public void setNeedLoudspeaker(String value) {
        setAttributeInternal(NEEDLOUDSPEAKER, value);
    }

    /**
     * Gets the attribute value for NeedBeverage, using the alias name NeedBeverage.
     * @return the value of NeedBeverage
     */
    public String getNeedBeverage() {
        return (String)getAttributeInternal(NEEDBEVERAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NeedBeverage.
     * @param value value to set the NeedBeverage
     */
    public void setNeedBeverage(String value) {
        setAttributeInternal(NEEDBEVERAGE, value);
    }

    /**
     * Gets the attribute value for NeedFruits, using the alias name NeedFruits.
     * @return the value of NeedFruits
     */
    public String getNeedFruits() {
        return (String)getAttributeInternal(NEEDFRUITS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NeedFruits.
     * @param value value to set the NeedFruits
     */
    public void setNeedFruits(String value) {
        setAttributeInternal(NEEDFRUITS, value);
    }

    /**
     * Gets the attribute value for NeedSnacks, using the alias name NeedSnacks.
     * @return the value of NeedSnacks
     */
    public String getNeedSnacks() {
        return (String)getAttributeInternal(NEEDSNACKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NeedSnacks.
     * @param value value to set the NeedSnacks
     */
    public void setNeedSnacks(String value) {
        setAttributeInternal(NEEDSNACKS, value);
    }

    /**
     * Gets the attribute value for SnackLevel, using the alias name SnackLevel.
     * @return the value of SnackLevel
     */
    public String getSnackLevel() {
        return (String)getAttributeInternal(SNACKLEVEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for SnackLevel.
     * @param value value to set the SnackLevel
     */
    public void setSnackLevel(String value) {
        setAttributeInternal(SNACKLEVEL, value);
    }

    /**
     * Gets the attribute value for NumOfPeople, using the alias name NumOfPeople.
     * @return the value of NumOfPeople
     */
    public BigDecimal getNumOfPeople() {
        return (BigDecimal)getAttributeInternal(NUMOFPEOPLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumOfPeople.
     * @param value value to set the NumOfPeople
     */
    public void setNumOfPeople(BigDecimal value) {
        setAttributeInternal(NUMOFPEOPLE, value);
    }

    /**
     * Gets the attribute value for State, using the alias name State.
     * @return the value of State
     */
    public String getState() {
        return (String)getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for State.
     * @param value value to set the State
     */
    public void setState(String value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for PrId, using the alias name PrId.
     * @return the value of PrId
     */
    public String getPrId() {
        return (String)getAttributeInternal(PRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrId.
     * @param value value to set the PrId
     */
    public void setPrId(String value) {
        setAttributeInternal(PRID, value);
    }

    /**
     * Gets the attribute value for Allday, using the alias name Allday.
     * @return the value of Allday
     */
    public String getAllday() {
        return (String)getAttributeInternal(ALLDAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Allday.
     * @param value value to set the Allday
     */
    public void setAllday(String value) {
        setAttributeInternal(ALLDAY, value);
    }

    /**
     * Gets the attribute value for SubmitDate, using the alias name SubmitDate.
     * @return the value of SubmitDate
     */
    public Timestamp getSubmitDate() {
        return (Timestamp)getAttributeInternal(SUBMITDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmitDate.
     * @param value value to set the SubmitDate
     */
    public void setSubmitDate(Timestamp value) {
        setAttributeInternal(SUBMITDATE, value);
    }

    /**
     * Gets the attribute value for ConfLevel, using the alias name ConfLevel.
     * @return the value of ConfLevel
     */
    public String getConfLevel() {
        return (String)getAttributeInternal(CONFLEVEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConfLevel.
     * @param value value to set the ConfLevel
     */
    public void setConfLevel(String value) {
        setAttributeInternal(CONFLEVEL, value);
    }

    /**
     * Gets the attribute value for BatchId, using the alias name BatchId.
     * @return the value of BatchId
     */
    public String getBatchId() {
        return (String)getAttributeInternal(BATCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BatchId.
     * @param value value to set the BatchId
     */
    public void setBatchId(String value) {
        setAttributeInternal(BATCHID, value);
    }

    /**
     * Gets the attribute value for BatchNo, using the alias name BatchNo.
     * @return the value of BatchNo
     */
    public String getBatchNo() {
        return (String)getAttributeInternal(BATCHNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BatchNo.
     * @param value value to set the BatchNo
     */
    public void setBatchNo(String value) {
        setAttributeInternal(BATCHNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity ConfRoomBatchReservationImpl.
     */
    public ConfRoomBatchReservationImpl getConfRoomBatchReservation() {
        return (ConfRoomBatchReservationImpl)getAttributeInternal(CONFROOMBATCHRESERVATION);
    }

    /**
     * Sets <code>value</code> as the associated entity ConfRoomBatchReservationImpl.
     */
    public void setConfRoomBatchReservation(ConfRoomBatchReservationImpl value) {
        setAttributeInternal(CONFROOMBATCHRESERVATION, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[]{id});
    }

    /**
     * Validation method for ConfRoomCalendar.
     */
    public boolean validateStartDate() {
//        根据客户要求，暂时取消30天的限制        
//        LoginUser user = (LoginUser)JSFUtils.resolveExpression("#{sessionScope.LoginUserBean}");
//        if (user.getIsUserInRole().get(Constants.ROLE_CONFRM_ADMIN) == null && getStartTime() != null) {
//            
//            long delta = this.getStartTime().getTime() - System.currentTimeMillis();
//            delta = delta/1000/60/60/24;
//            
//            if (delta >= 30) {
//                return false;
//            }
//        }        
        return true;
    }


}
