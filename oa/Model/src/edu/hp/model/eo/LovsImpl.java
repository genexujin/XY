package edu.hp.model.eo;

import edu.hp.model.common.BaseEntity;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 08 13:29:56 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovsImpl extends BaseEntity {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(LovsImpl obj) {
                return obj.getId();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        Code {
            public Object get(LovsImpl obj) {
                return obj.getCode();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setCode((String)value);
            }
        }
        ,
        LovDesc {
            public Object get(LovsImpl obj) {
                return obj.getLovDesc();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setLovDesc((String)value);
            }
        }
        ,
        ParentCode {
            public Object get(LovsImpl obj) {
                return obj.getParentCode();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setParentCode((String)value);
            }
        }
        ,
        Value {
            public Object get(LovsImpl obj) {
                return obj.getValue();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setValue((String)value);
            }
        }
        ,
        CreatedAt {
            public Object get(LovsImpl obj) {
                return obj.getCreatedAt();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setCreatedAt((Timestamp)value);
            }
        }
        ,
        CreatedBy {
            public Object get(LovsImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(LovsImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedAt {
            public Object get(LovsImpl obj) {
                return obj.getLastUpdatedAt();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setLastUpdatedAt((Timestamp)value);
            }
        }
        ,
        FlexCol1 {
            public Object get(LovsImpl obj) {
                return obj.getFlexCol1();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setFlexCol1((String)value);
            }
        }
        ,
        FlexCol2 {
            public Object get(LovsImpl obj) {
                return obj.getFlexCol2();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setFlexCol2((String)value);
            }
        }
        ,
        FlexCol3 {
            public Object get(LovsImpl obj) {
                return obj.getFlexCol3();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setFlexCol3((String)value);
            }
        }
        ,
        Expired {
            public Object get(LovsImpl obj) {
                return obj.getExpired();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setExpired((String)value);
            }
        }
        ,
        Locations {
            public Object get(LovsImpl obj) {
                return obj.getLocations();
            }

            public void put(LovsImpl obj, Object value) {
                obj.setLocations((LocationsImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LovsImpl object);

        public abstract void put(LovsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int CODE = AttributesEnum.Code.index();
    public static final int LOVDESC = AttributesEnum.LovDesc.index();
    public static final int PARENTCODE = AttributesEnum.ParentCode.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int CREATEDAT = AttributesEnum.CreatedAt.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDAT = AttributesEnum.LastUpdatedAt.index();
    public static final int FLEXCOL1 = AttributesEnum.FlexCol1.index();
    public static final int FLEXCOL2 = AttributesEnum.FlexCol2.index();
    public static final int FLEXCOL3 = AttributesEnum.FlexCol3.index();
    public static final int EXPIRED = AttributesEnum.Expired.index();
    public static final int LOCATIONS = AttributesEnum.Locations.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LovsImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Code, using the alias name Code.
     * @return the value of Code
     */
    public String getCode() {
        return (String)getAttributeInternal(CODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Code.
     * @param value value to set the Code
     */
    public void setCode(String value) {
        setAttributeInternal(CODE, value);
    }

    /**
     * Gets the attribute value for LovDesc, using the alias name LovDesc.
     * @return the value of LovDesc
     */
    public String getLovDesc() {
        return (String)getAttributeInternal(LOVDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for LovDesc.
     * @param value value to set the LovDesc
     */
    public void setLovDesc(String value) {
        setAttributeInternal(LOVDESC, value);
    }

    /**
     * Gets the attribute value for ParentCode, using the alias name ParentCode.
     * @return the value of ParentCode
     */
    public String getParentCode() {
        return (String)getAttributeInternal(PARENTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentCode.
     * @param value value to set the ParentCode
     */
    public void setParentCode(String value) {
        setAttributeInternal(PARENTCODE, value);
    }

    /**
     * Gets the attribute value for Value, using the alias name Value.
     * @return the value of Value
     */
    public String getValue() {
        return (String)getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Value.
     * @param value value to set the Value
     */
    public void setValue(String value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for CreatedAt, using the alias name CreatedAt.
     * @return the value of CreatedAt
     */
    public Timestamp getCreatedAt() {
        return (Timestamp)getAttributeInternal(CREATEDAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedAt.
     * @param value value to set the CreatedAt
     */
    public void setCreatedAt(Timestamp value) {
        setAttributeInternal(CREATEDAT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedAt, using the alias name LastUpdatedAt.
     * @return the value of LastUpdatedAt
     */
    public Timestamp getLastUpdatedAt() {
        return (Timestamp)getAttributeInternal(LASTUPDATEDAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedAt.
     * @param value value to set the LastUpdatedAt
     */
    public void setLastUpdatedAt(Timestamp value) {
        setAttributeInternal(LASTUPDATEDAT, value);
    }

    /**
     * Gets the attribute value for FlexCol1, using the alias name FlexCol1.
     * @return the value of FlexCol1
     */
    public String getFlexCol1() {
        return (String)getAttributeInternal(FLEXCOL1);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlexCol1.
     * @param value value to set the FlexCol1
     */
    public void setFlexCol1(String value) {
        setAttributeInternal(FLEXCOL1, value);
    }

    /**
     * Gets the attribute value for FlexCol2, using the alias name FlexCol2.
     * @return the value of FlexCol2
     */
    public String getFlexCol2() {
        return (String)getAttributeInternal(FLEXCOL2);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlexCol2.
     * @param value value to set the FlexCol2
     */
    public void setFlexCol2(String value) {
        setAttributeInternal(FLEXCOL2, value);
    }

    /**
     * Gets the attribute value for FlexCol3, using the alias name FlexCol3.
     * @return the value of FlexCol3
     */
    public String getFlexCol3() {
        return (String)getAttributeInternal(FLEXCOL3);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlexCol3.
     * @param value value to set the FlexCol3
     */
    public void setFlexCol3(String value) {
        setAttributeInternal(FLEXCOL3, value);
    }

    /**
     * Gets the attribute value for Expired, using the alias name Expired.
     * @return the value of Expired
     */
    public String getExpired() {
        return (String)getAttributeInternal(EXPIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Expired.
     * @param value value to set the Expired
     */
    public void setExpired(String value) {
        setAttributeInternal(EXPIRED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity LocationsImpl.
     */
    public LocationsImpl getLocations() {
        return (LocationsImpl)getAttributeInternal(LOCATIONS);
    }

    /**
     * Sets <code>value</code> as the associated entity LocationsImpl.
     */
    public void setLocations(LocationsImpl value) {
        setAttributeInternal(LOCATIONS, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[]{id});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("edu.hp.model.eo.Lovs");
    }
}
