package edu.hp.model.eo;

import edu.hp.model.common.BaseEntity;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 08 13:30:04 CST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MenusImpl extends BaseEntity {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        MenuId {
            public Object get(MenusImpl obj) {
                return obj.getMenuId();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setMenuId((String)value);
            }
        }
        ,
        MenuName {
            public Object get(MenusImpl obj) {
                return obj.getMenuName();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setMenuName((String)value);
            }
        }
        ,
        MenuTaskflowUrl {
            public Object get(MenusImpl obj) {
                return obj.getMenuTaskflowUrl();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setMenuTaskflowUrl((String)value);
            }
        }
        ,
        MenuDesc {
            public Object get(MenusImpl obj) {
                return obj.getMenuDesc();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setMenuDesc((String)value);
            }
        }
        ,
        MenuCategory {
            public Object get(MenusImpl obj) {
                return obj.getMenuCategory();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setMenuCategory((String)value);
            }
        }
        ,
        ParentMenuId {
            public Object get(MenusImpl obj) {
                return obj.getParentMenuId();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setParentMenuId((String)value);
            }
        }
        ,
        MenuMasterCategory {
            public Object get(MenusImpl obj) {
                return obj.getMenuMasterCategory();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setMenuMasterCategory((String)value);
            }
        }
        ,
        MenuIconUrl {
            public Object get(MenusImpl obj) {
                return obj.getMenuIconUrl();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setMenuIconUrl((String)value);
            }
        }
        ,
        Expired {
            public Object get(MenusImpl obj) {
                return obj.getExpired();
            }

            public void put(MenusImpl obj, Object value) {
                obj.setExpired((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MenusImpl object);

        public abstract void put(MenusImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int MENUID = AttributesEnum.MenuId.index();
    public static final int MENUNAME = AttributesEnum.MenuName.index();
    public static final int MENUTASKFLOWURL = AttributesEnum.MenuTaskflowUrl.index();
    public static final int MENUDESC = AttributesEnum.MenuDesc.index();
    public static final int MENUCATEGORY = AttributesEnum.MenuCategory.index();
    public static final int PARENTMENUID = AttributesEnum.ParentMenuId.index();
    public static final int MENUMASTERCATEGORY = AttributesEnum.MenuMasterCategory.index();
    public static final int MENUICONURL = AttributesEnum.MenuIconUrl.index();
    public static final int EXPIRED = AttributesEnum.Expired.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MenusImpl() {
    }

    /**
     * Gets the attribute value for MenuId, using the alias name MenuId.
     * @return the value of MenuId
     */
    public String getMenuId() {
        return (String)getAttributeInternal(MENUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MenuId.
     * @param value value to set the MenuId
     */
    public void setMenuId(String value) {
        setAttributeInternal(MENUID, value);
    }

    /**
     * Gets the attribute value for MenuName, using the alias name MenuName.
     * @return the value of MenuName
     */
    public String getMenuName() {
        return (String)getAttributeInternal(MENUNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for MenuName.
     * @param value value to set the MenuName
     */
    public void setMenuName(String value) {
        setAttributeInternal(MENUNAME, value);
    }

    /**
     * Gets the attribute value for MenuTaskflowUrl, using the alias name MenuTaskflowUrl.
     * @return the value of MenuTaskflowUrl
     */
    public String getMenuTaskflowUrl() {
        return (String)getAttributeInternal(MENUTASKFLOWURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MenuTaskflowUrl.
     * @param value value to set the MenuTaskflowUrl
     */
    public void setMenuTaskflowUrl(String value) {
        setAttributeInternal(MENUTASKFLOWURL, value);
    }

    /**
     * Gets the attribute value for MenuDesc, using the alias name MenuDesc.
     * @return the value of MenuDesc
     */
    public String getMenuDesc() {
        return (String)getAttributeInternal(MENUDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for MenuDesc.
     * @param value value to set the MenuDesc
     */
    public void setMenuDesc(String value) {
        setAttributeInternal(MENUDESC, value);
    }

    /**
     * Gets the attribute value for MenuCategory, using the alias name MenuCategory.
     * @return the value of MenuCategory
     */
    public String getMenuCategory() {
        return (String)getAttributeInternal(MENUCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MenuCategory.
     * @param value value to set the MenuCategory
     */
    public void setMenuCategory(String value) {
        setAttributeInternal(MENUCATEGORY, value);
    }

    /**
     * Gets the attribute value for ParentMenuId, using the alias name ParentMenuId.
     * @return the value of ParentMenuId
     */
    public String getParentMenuId() {
        return (String)getAttributeInternal(PARENTMENUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentMenuId.
     * @param value value to set the ParentMenuId
     */
    public void setParentMenuId(String value) {
        setAttributeInternal(PARENTMENUID, value);
    }

    /**
     * Gets the attribute value for MenuMasterCategory, using the alias name MenuMasterCategory.
     * @return the value of MenuMasterCategory
     */
    public String getMenuMasterCategory() {
        return (String)getAttributeInternal(MENUMASTERCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MenuMasterCategory.
     * @param value value to set the MenuMasterCategory
     */
    public void setMenuMasterCategory(String value) {
        setAttributeInternal(MENUMASTERCATEGORY, value);
    }

    /**
     * Gets the attribute value for MenuIconUrl, using the alias name MenuIconUrl.
     * @return the value of MenuIconUrl
     */
    public String getMenuIconUrl() {
        return (String)getAttributeInternal(MENUICONURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MenuIconUrl.
     * @param value value to set the MenuIconUrl
     */
    public void setMenuIconUrl(String value) {
        setAttributeInternal(MENUICONURL, value);
    }

    /**
     * Gets the attribute value for Expired, using the alias name Expired.
     * @return the value of Expired
     */
    public String getExpired() {
        return (String)getAttributeInternal(EXPIRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Expired.
     * @param value value to set the Expired
     */
    public void setExpired(String value) {
        setAttributeInternal(EXPIRED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param menuId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String menuId) {
        return new Key(new Object[]{menuId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("edu.hp.model.eo.Menus");
    }
}
