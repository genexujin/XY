package com.xy.scpms.model.vo;


import com.xy.scpms.model.utils.Codes;

import java.sql.ResultSet;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jun 04 09:52:39 CST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractLineViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public ContractLineViewImpl() {
    }
    
    public void setCurrentRowById(Number id) {
        Row[] rows = findByKey(new Key(new Object[] { id }), 1);
        if (rows != null && rows.length > 0) {
            this.setCurrentRow(rows[0]);
        }

    }


    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params,
                                             int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc,
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }


    public void createLike() {

        Row newRow = null;

        Row currentRow = getCurrentRow();
        int count  = this.getRowCount();

        if (currentRow != null) {
            Number lineNo = (Number)currentRow.getAttribute("LineNo");
            String shipMnftNo = (String)currentRow.getAttribute("ShipMnftNo");
            String shipPlant = (String)currentRow.getAttribute("ShipPlant");
            String shipOwner = (String)currentRow.getAttribute("ShipOwner");
            String shipBroker = (String)currentRow.getAttribute("ShipBroker");
            String shipClsfctSociety =
                (String)currentRow.getAttribute("ShipClsfctSociety");
            Date signOffDate = (Date)currentRow.getAttribute("SignOffDate");
            Date effectiveDate =
                (Date)currentRow.getAttribute("EffectiveDate");
            Date workStartDate =
                (Date)currentRow.getAttribute("WorkStartDate");
            Date fgCompletionDate =
                (Date)currentRow.getAttribute("FgCompletionDate");
            String ownerType = (String)currentRow.getAttribute("OwnerType");
            String plantType = (String)currentRow.getAttribute("PlantType");
            String brokerType = (String)currentRow.getAttribute("BrokerType");
            String Currency = (String)currentRow.getAttribute("Currency");
            String ImoNo = (String)currentRow.getAttribute("ImoNo");
            Number ShipPrice = (Number)currentRow.getAttribute("ShipPrice");
            Number ExchangeRate = (Number)currentRow.getAttribute("ExchangeRate");
            
            count++;
            newRow = createRow();
            newRow.setAttribute("LineNo", new Number(count));
            newRow.setAttribute("ShipMnftNo", shipMnftNo);
            newRow.setAttribute("ShipPlant", shipPlant);
            newRow.setAttribute("ShipOwner", shipOwner);
            newRow.setAttribute("ShipBroker", shipBroker);
            newRow.setAttribute("ShipClsfctSociety", shipClsfctSociety);
            newRow.setAttribute("SignOffDate", signOffDate);
            newRow.setAttribute("EffectiveDate", effectiveDate);
            newRow.setAttribute("WorkStartDate", workStartDate);
            newRow.setAttribute("FgCompletionDate", fgCompletionDate);
            newRow.setAttribute("OwnerType", ownerType);
            newRow.setAttribute("PlantType", plantType);
            newRow.setAttribute("BrokerType", brokerType);
            newRow.setAttribute("Currency", Currency);
            newRow.setAttribute("ImoNo", ImoNo);
            newRow.setAttribute("ShipPrice", ShipPrice);
            newRow.setAttribute("ExchangeRate", ExchangeRate);
            newRow.setAttribute("ContractType", Codes.CONTRACT_VALUE_COPY);

        } else {
            newRow = createRow();
            newRow.setAttribute("LineNo", new Number(1));

        }
        this.setRangeSize(-1);
        this.insertRowAtRangeIndex(count,newRow);
        
    }
    
    public void removeFromList(){
        
        Row currentRow = getCurrentRow();
        Number seqNum = (Number)currentRow.getAttribute("LineNo");
        int removedSeq = seqNum.intValue();
        currentRow.remove();
        
        Row[] allRowsInRange = this.getAllRowsInRange();
        Number one = new Number(1);
        for(Row row:allRowsInRange){
            Number tmp = (Number)row.getAttribute("LineNo");
            if(tmp.intValue()>removedSeq){
                row.setAttribute("LineNo", tmp.minus(one));
            }
        }
                
    }

    /**
     * Returns the variable value for idBind.
     * @return variable value for idBind
     */
    public String getidBind() {
        return (String)ensureVariableManager().getVariableValue("idBind");
    }

    /**
     * Sets <code>value</code> for variable idBind.
     * @param value value to bind as idBind
     */
    public void setidBind(String value) {
        ensureVariableManager().setVariableValue("idBind", value);
    }

    /**
     * Returns the variable value for headerIdBind.
     * @return variable value for headerIdBind
     */
    public String getheaderIdBind() {
        return (String)ensureVariableManager().getVariableValue("headerIdBind");
    }

    /**
     * Sets <code>value</code> for variable headerIdBind.
     * @param value value to bind as headerIdBind
     */
    public void setheaderIdBind(String value) {
        ensureVariableManager().setVariableValue("headerIdBind", value);
    }

    /**
     * Returns the variable value for idvar.
     * @return variable value for idvar
     */
    public Number getidvar() {
        return (Number)ensureVariableManager().getVariableValue("idvar");
    }

    /**
     * Sets <code>value</code> for variable idvar.
     * @param value value to bind as idvar
     */
    public void setidvar(Number value) {
        ensureVariableManager().setVariableValue("idvar", value);
    }
}
